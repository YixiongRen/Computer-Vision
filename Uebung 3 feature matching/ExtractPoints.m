function [x, y] = ExtractPoints(I_DoG)

  x = [];
  y = [];
  
  N = size(I_DoG, 1);
  [i,j]=size(I_DoG{1,1});
%   max=0;
%   min=0;
%   for q=1:numel(I_DoG)
%       for w=1:i
%           for e=1:j
%             if max <I_DoG{q,1}(w,e) 
%                 max = I_DoG{q,1}(w,e);
%             elseif min>I_DoG{q,1}(w,e)
%                 min = I_DoG{q,1}(w,e);
%             else
%             end
%           end
%       end
%   end
%   
%  Limit = max/20;
%             
                
                
                
                
  for n=2:N-1
    ...
    % neue Punkte (an Position (i, j) koennen mit
    % x(end+1) = i;
    % y(end+1) = j;
    % hinzugefuegt werden.
    
    for m = 2:i-1
        for p = 2:j-1
            
            if ((abs(I_DoG{n,1}(m,p))>=0.02)&&...   
                    ((I_DoG{n,1}(m,p) >=0 && I_DoG{n,1}(m,p) >= I_DoG{n,1}(m+1,p) &&...
                    I_DoG{n,1}(m,p) >= I_DoG{n,1}(m,p+1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n,1}(m-1,p)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n,1}(m,p-1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n,1}(m+1,p-1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n,1}(m+1,p+1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n,1}(m-1,p-1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n,1}(m-1,p+1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n-1,1}(m+1,p)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n-1,1}(m,p+1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n-1,1}(m-1,p)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n-1,1}(m,p-1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n-1,1}(m+1,p-1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n-1,1}(m+1,p+1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n-1,1}(m-1,p-1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n-1,1}(m-1,p+1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n-1,1}(m,p)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n+1,1}(m+1,p)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n+1,1}(m,p+1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n+1,1}(m-1,p)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n+1,1}(m,p-1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n+1,1}(m+1,p-1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n+1,1}(m+1,p+1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n+1,1}(m-1,p-1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n+1,1}(m-1,p+1)&&...
                    I_DoG{n,1}(m,p) >= I_DoG{n+1,1}(m,p))...
                    ||...
                    (I_DoG{n,1}(m,p) <=0 && I_DoG{n,1}(m,p) <= I_DoG{n,1}(m+1,p)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n,1}(m,p+1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n,1}(m-1,p)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n,1}(m,p-1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n,1}(m+1,p-1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n,1}(m+1,p+1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n,1}(m-1,p-1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n,1}(m-1,p+1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n-1,1}(m+1,p)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n-1,1}(m,p+1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n-1,1}(m-1,p)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n-1,1}(m,p-1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n-1,1}(m+1,p-1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n-1,1}(m+1,p+1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n-1,1}(m-1,p-1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n-1,1}(m-1,p+1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n-1,1}(m,p)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n+1,1}(m+1,p)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n+1,1}(m,p+1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n+1,1}(m-1,p)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n+1,1}(m,p-1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n+1,1}(m+1,p-1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n+1,1}(m+1,p+1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n+1,1}(m-1,p-1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n+1,1}(m-1,p+1)&&...
                    I_DoG{n,1}(m,p) <= I_DoG{n+1,1}(m,p))))
                    x = [x p];
                    y = [y m];
            
            end
        end

    end
  end
